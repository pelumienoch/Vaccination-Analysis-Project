`Tick the antigens (vaccinations) you know, IPV` = ifelse(`Tick the antigens (vaccinations) you know, IPV` == "1", "IPV", NA))
y1<- y1 %>%
unite(col = "vaccinationKnowledge",
c(`Tick the antigens (vaccination) you know, BCG`, `Tick the antigens (vaccinations) you know, bOPV`,
`Tick the antigens (vaccinations) you know, Penta`, `Tick the antigens (vaccinations) you know, Td`,
`Tick the antigens (vaccinations) you know, Rota`, `Tick the antigens (vaccinations) you know, MenA`,
`Tick the antigens (vaccinations) you know, Measles`, `Tick the antigens (vaccinations) you know, HPV`,
`Tick the antigens (vaccinations) you know, IPV`),
sep = "; ",
remove = TRUE,
na.rm = TRUE) %>%
mutate(
# make a copy of vaccinationKnowledge column, but of class "list" (which is required to use ggupset() in next step)
vaccinationKnowledge_list = as.list(strsplit(vaccinationKnowledge, "; "))
)
ggplot(
data = y1,
mapping = aes(x = vaccinationKnowledge_list)) +
geom_bar() +
scale_x_upset(
reverse = FALSE,
n_intersections = 10,
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"))+
labs(
title = "Knowledge of Vaccination",
subtitle = "The frequent combinations of the knowledge of available vaccines by particpants",
#caption = "Caption here.",
x = "vaccines",
y = "Frequency in dataset")
View(yusuf2)
### want to perform a combinationa analysis
yusuf2 <- import(here("Yusuf raw data.xlsx", which = Sheet1))
### want to perform a combinationa analysis
yusuf2 <- import(here("Yusuf raw data.xlsx", which = "Sheet1"))
### want to perform a combinationa analysis
yusuf2 <- import(here("Yusuf raw data.xlsx", which = `Sheet1`))
### want to perform a combinationa analysis
yusuf2 <- import(here("Yusuf raw data.xlsx", which = "Sheet1"))
### want to perform a combinationa analysis
yusuf2 <- import(here("Yusuf raw data.xlsx"), which = "Sheet1")
View(yusuf2)
names(yusuf2)
# create column with the symptoms named, separated by semicolons
y1<- yusuf2 %>%
mutate(`Tick the antigens (vaccination) you know, BCG` = ifelse(`Tick the antigens (vaccination) you know, BCG` == "1", "BCG", NA),
`Tick the antigens (vaccinations) you know, bOPV` = ifelse(`Tick the antigens (vaccinations) you know, bOPV` == "1", "BoPV", NA),
`Tick the antigens (vaccinations) you know, Penta` = ifelse(`Tick the antigens (vaccinations) you know, Penta` == "1", "Penta", NA),
`Tick the antigens (vaccinations) you know, Td` = ifelse(`Tick the antigens (vaccinations) you know, Td` == "1", "Td", NA),
`Tick the antigens (vaccinations) you know, Rota` = ifelse(`Tick the antigens (vaccinations) you know, Rota` == "1", "Rota", NA),
`Tick the antigens (vaccinations) you know, MenA` = ifelse(`Tick the antigens (vaccinations) you know, MenA` == "1", "MenA", NA),
`Tick the antigens (vaccinations) you know, Measles` = ifelse(`Tick the antigens (vaccinations) you know, Measles` == "1", "Measles", NA),
`Tick the antigens (vaccinations) you know, HPV` = ifelse(`Tick the antigens (vaccinations) you know, HPV` == "1", "HPV", NA),
`Tick the antigens (vaccinations) you know, IPV` = ifelse(`Tick the antigens (vaccinations) you know, IPV` == "1", "IPV", NA))
y1<- y1 %>%
unite(col = "vaccinationKnowledge",
c(`Tick the antigens (vaccination) you know, BCG`, `Tick the antigens (vaccinations) you know, bOPV`,
`Tick the antigens (vaccinations) you know, Penta`, `Tick the antigens (vaccinations) you know, Td`,
`Tick the antigens (vaccinations) you know, Rota`, `Tick the antigens (vaccinations) you know, MenA`,
`Tick the antigens (vaccinations) you know, Measles`, `Tick the antigens (vaccinations) you know, HPV`,
`Tick the antigens (vaccinations) you know, IPV`),
sep = "; ",
remove = TRUE,
na.rm = TRUE) %>%
mutate(
# make a copy of vaccinationKnowledge column, but of class "list" (which is required to use ggupset() in next step)
vaccinationKnowledge_list = as.list(strsplit(vaccinationKnowledge, "; "))
)
ggplot(
data = y1,
mapping = aes(x = vaccinationKnowledge_list)) +
geom_bar() +
scale_x_upset(
reverse = FALSE,
n_intersections = 10,
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"))+
labs(
title = "Knowledge of Vaccination",
subtitle = "The frequent combinations of the knowledge of available vaccines by particpants",
#caption = "Caption here.",
x = "vaccines",
y = "Frequency in dataset")
c2 %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
y2 %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
y2<- yusuf2 %>%
mutate(`Tick the antigens (vaccination) you know, BCG` = ifelse(`Tick the antigens (vaccination) you know, BCG` == "1", "1", 0),
`Tick the antigens (vaccinations) you know, bOPV` = ifelse(`Tick the antigens (vaccinations) you know, bOPV` == "1", "1", 0),
`Tick the antigens (vaccinations) you know, Penta` = ifelse(`Tick the antigens (vaccinations) you know, Penta` == "1", "1", 0),
`Tick the antigens (vaccinations) you know, Td` = ifelse(`Tick the antigens (vaccinations) you know, Td` == "1", "1", 0),
`Tick the antigens (vaccinations) you know, Rota` = ifelse(`Tick the antigens (vaccinations) you know, Rota` == "1", "1", 0),
`Tick the antigens (vaccinations) you know, MenA` = ifelse(`Tick the antigens (vaccinations) you know, MenA` == "1", "1", 0),
`Tick the antigens (vaccinations) you know, Measles` = ifelse(`Tick the antigens (vaccinations) you know, Measles` == "1", "1", 0),
`Tick the antigens (vaccinations) you know, HPV` = ifelse(`Tick the antigens (vaccinations) you know, HPV` == "1", "1", 0),
`Tick the antigens (vaccinations) you know, IPV` = ifelse(`Tick the antigens (vaccinations) you know, IPV` == "1", "1", 0))
y2 %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
View(y2)
y2 %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
pacman::p_load(
rio,        # importing data
here,       # relative file pathways
janitor,    # data cleaning and tables
lubridate,  # working with dates
matchmaker, # dictionary-based cleaning
epikit,     # age_categories() function
tidyverse,   # data management and visualization
gtsummary,
skimr
)
pacman::p_load(flextable)
pacman::p_load(
tidyverse,     # data management and visualization
UpSetR,        # special package for combination plots
ggupset)       # special package for combination plots
y2 %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
ggplot(
data = y1,
mapping = aes(x = vaccinationKnowledge_list)) +
geom_bar() +
scale_x_upset(
reverse = FALSE,
n_intersections = 10,
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"))+
labs(
title = "Knowledge of Vaccination",
subtitle = "The frequent combinations of the knowledge of available vaccines by particpants",
#caption = "Caption here.",
x = "vaccines combinations",
y = "Frequency in dataset")
y2 %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
ggplot(
data = y1,
mapping = aes(x = vaccinationKnowledge_list)) +
geom_bar() +
scale_x_upset(
reverse = FALSE,
n_intersections = 10,
sets = c("BCG", "BoPV", "Pnta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"))+
labs(
title = "Knowledge of Vaccination",
subtitle = "The frequent combinations of the knowledge of available vaccines by particpants",
#caption = "Caption here.",
x = "vaccines combinations",
y = "Frequency in dataset")
ggplot(
data = y1,
mapping = aes(x = vaccinationKnowledge_list)) +
geom_bar() +
scale_x_upset(
reverse = FALSE,
n_intersections = 10,
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"))+
labs(
title = "Knowledge of Vaccination",
subtitle = "The frequent combinations of the knowledge of available vaccines by particpants",
#caption = "Caption here.",
x = "vaccines combinations",
y = "Frequency in dataset")
ggplot(
data = y1,
mapping = aes(x = vaccinationKnowledge_list)) +
geom_bar() +
geom_text(aes(label = paste0(round(..prop.., 2) * 100, "%")), vjust = -0.5), stat = "count") +
ggplot(
data = y1,
mapping = aes(x = vaccinationKnowledge_list)) +
geom_bar() +
geom_text(aes(label = paste0(round(..prop.., 2) * 100, "%")), vjust = -0.5, stat = "count") +
scale_x_upset(
reverse = FALSE,
n_intersections = 10,
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"))+
labs(
title = "Knowledge of Vaccination",
subtitle = "The frequent combinations of the knowledge of available vaccines by particpants",
#caption = "Caption here.",
x = "vaccines combinations",
y = "Frequency in dataset")
### want to perform a combinationa analysis
yusuf2 <- import(here("Yusuf raw data.xlsx"), which = "B")
names(yusuf2)
# create column with the symptoms named, separated by semicolons
y1<- yusuf2 %>%
mutate(BCG = ifelse(BCG == "1", "BCG", NA),
BopV = ifelse(BopV == "1", "BoPV", NA),
Penta = ifelse(Penta == "1", "Penta", NA),
Td = ifelse(Td == "1", "Td", NA),
Rota = ifelse(Rota == "1", "Rota", NA),
MenA = ifelse(MenA == "1", "MenA", NA),
Measles = ifelse(Measles == "1", "Measles", NA),
HPV = ifelse(HPV == "1", "HPV", NA),
IPV = ifelse(IPV == "1", "IPV", NA))
y1<- y1 %>%
unite(col = "vaccinationKnowledge",
c(BCG, BopV, Penta, Td, Rota, MenA, Measles, HPV, IPV),
sep = "; ",
remove = TRUE,
na.rm = TRUE) %>%
mutate(
# make a copy of vaccinationKnowledge column, but of class "list" (which is required to use ggupset() in next step)
vaccinationKnowledge_list = as.list(strsplit(vaccinationKnowledge, "; "))
)
ggplot(
data = y1,
mapping = aes(x = vaccinationKnowledge_list)) +
geom_bar() +
scale_x_upset(
reverse = FALSE,
n_intersections = 10,
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"))+
labs(
title = "Knowledge of Vaccination",
subtitle = "The frequent combinations of the knowledge of available vaccines by particpants",
#caption = "Caption here.",
x = "vaccines combinations",
y = "Frequency in dataset")
y2<- yusuf2 %>%
mutate(BCG = ifelse(BCG == "1", "1", 0),
BopV = ifelse(BopV == "1", "1", 0),
Penta = ifelse(Penta == "1", "1", 0),
Td = ifelse(Td == "1", "1", 0),
Rota = ifelse(Rota == "1", "1", 0),
MenA = ifelse(MenA == "1", "1", 0),
Measles = ifelse(Measles == "1", "1", 0),
HPV = ifelse(HPV == "1", "1", 0),
IPV = ifelse(IPV == "1", "1", 0))
y2 %>%
UpSetR::upset(
sets = c("BCG", "BopV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
skim(yusuf2)
y2 %>%
UpSetR::upset(
sets = c("BCG", "BopV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
View(y2)
pacman::p_load(
tidyverse,     # data management and visualization
UpSetR,        # special package for combination plots
ggupset)       # special package for combination plots
y2 %>%
UpSetR::upset(
sets = c("BCG", "BopV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
skim(y2)
y2 %>%
mutate(across(.cols = c(), .fns = as.numeric)) %>%
UpSetR::upset(
sets = c("BCG", "BopV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
skim(y2)
y2 %>%
mutate(across(.cols = everything(), .fns = as.numeric)) %>%
UpSetR::upset(
sets = c("BCG", "BopV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey",), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
y2 %>%
mutate(across(.cols = everything(), .fns = as.numeric)) %>%
UpSetR::upset(
sets = c("BCG", "BopV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey"), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
### want to perform a combinationa analysis
yusuf3 <- import(here("Yusuf raw data.xlsx"), which = "C")
names(yusuf3)
# create column with the symptoms named, separated by semicolons
y3<- yusuf2 %>%
mutate(BCG = ifelse(BCG == "1", "BCG", NA),
BoPV = ifelse(BoPV == "1", "BoPV", NA),
Penta = ifelse(Penta == "1", "Penta", NA),
Td = ifelse(Td == "1", "Td", NA),
Rota = ifelse(Rota == "1", "Rota", NA),
MenA = ifelse(MenA == "1", "MenA", NA),
Measles = ifelse(Measles == "1", "Measles", NA),
HPV = ifelse(HPV == "1", "HPV", NA),
IPV = ifelse(IPV == "1", "IPV", NA),
YF = ifelse(YF == "1", "YF", NA))
View(yusuf3)
# create column with the symptoms named, separated by semicolons
y3<- yusuf3 %>%
mutate(BCG = ifelse(BCG == "1", "BCG", NA),
BoPV = ifelse(BoPV == "1", "BoPV", NA),
Penta = ifelse(Penta == "1", "Penta", NA),
Td = ifelse(Td == "1", "Td", NA),
Rota = ifelse(Rota == "1", "Rota", NA),
MenA = ifelse(MenA == "1", "MenA", NA),
Measles = ifelse(Measles == "1", "Measles", NA),
HPV = ifelse(HPV == "1", "HPV", NA),
IPV = ifelse(IPV == "1", "IPV", NA),
YF = ifelse(YF == "1", "YF", NA))
y3<- y3 %>%
unite(col = "vaccinationmissed",
c(BCG, BoPV, Penta, Td, Rota, MenA, Measles, HPV, IPV, YF),
sep = "; ",
remove = TRUE,
na.rm = TRUE) %>%
mutate(
# make a copy of vaccinationKnowledge column, but of class "list" (which is required to use ggupset() in next step)
vaccinationmissed_list = as.list(strsplit(vaccinationmissed, "; "))
)
ggplot(
data = y3,
mapping = aes(x = vaccinationmissed_list)) +
geom_bar() +
scale_x_upset(
reverse = FALSE,
n_intersections = 10,
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV", "YF"))+
labs(
title = "Vaccine missed",
subtitle = "The frequent combinations of the vaccines missed by particpants",
#caption = "Caption here.",
x = "vaccines combinations",
y = "Frequency in dataset")
y4<- yusuf3 %>%
mutate(BCG = ifelse(BCG == "1", "1", 0),
BoPV = ifelse(BoPV == "1", "1", 0),
Penta = ifelse(Penta == "1", "1", 0),
Td = ifelse(Td == "1", "1", 0),
Rota = ifelse(Rota == "1", "1", 0),
MenA = ifelse(MenA == "1", "1", 0),
Measles = ifelse(Measles == "1", "1", 0),
HPV = ifelse(HPV == "1", "1", 0),
IPV = ifelse(IPV == "1", "1", 0),
YF = ifelse(YF == "1", "1", 0))
y4 %>%
mutate(across(.cols = everything(), .fns = as.numeric)) %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV", "YF"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey"), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
skim(y4)
y4 %>%
mutate(across(.cols = everything(), .fns = as.numeric)) %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV", "YF"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey", "pink"), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 12,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
y4 %>%
mutate(across(.cols = everything(), .fns = as.numeric)) %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV", "YF"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey", "pink"), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 10,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "knowledge of vaccines")
y4 %>%
mutate(across(.cols = everything(), .fns = as.numeric)) %>%
UpSetR::upset(
sets = c("BCG", "BoPV", "Penta", "Td", "Rota", "MenA", "Measles", "HPV","IPV", "YF"),
order.by = "freq",
sets.bar.color = c("blue", "red", "yellow", "darkgreen", "green", "orange", "brown", "purple", "grey", "pink"), # optional colors
empty.intersections = "on",
# nsets = 3,
nintersects = 10,   # number of bars to plot, in this case, plot the top 12
number.angles = 0,
point.size = 3.5,
line.size = 2,
mainbar.y.label = "vaccine combination",
sets.x.label = "missed vaccines")
### want to perform a combinationa analysis
yusuf4 <- import(here("Yusuf raw data.xlsx"), which = "D")
names(yusuf4)
View(yusuf4)
### want to perform a combinationa analysis
yusuf4 <- import(here("Yusuf raw data.xlsx"), which = "D")
names(yusuf4)
